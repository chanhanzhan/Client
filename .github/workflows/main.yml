name: Go Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        goos: [linux]  # 支持不同操作系统
        goarch: [amd64, arm64]  # 支持不同架构

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # 使用最新版的 checkout

      - name: Set up Go
        uses: actions/setup-go@v3  # 设置 Go 版本
        with:
          go-version: '1.20'

      - name: Cache Go modules
        uses: actions/cache@v3  # 使用缓存加速依赖管理
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build with Go
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -ldflags="-s -w" -trimpath -buildmode=pie -o dist/Client-${{ matrix.goarch }}

      - name: Print Build Output
        run: |
          ls -lh dist/Client-${{ matrix.goarch }}  # 查看生成的二进制文件